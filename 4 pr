1.
#include <iostream>
using namespace std;

int find_min(int arr[], int first, int last) {
    int min_idx = first;
    int minimum = arr[first];
    for (int i = first; i < last; i++) {
        if (arr[i] < minimum) {
            min_idx = i;
            minimum = arr[i];
        }
    }
    return min_idx;
}

void selection_sort(int arr[], int size) {
    int first = 0;
    int min_idx;
    while (first < size) {
        min_idx = find_min(arr, first, size);
        int temp = arr[first];
        arr[first] = arr[min_idx];
        arr[min_idx] = temp;
        first++;
    }
}

int main() {
    int *arr;
    int size;
    cout<<"Enter size: \n";
    cin >> size;
    cout<<"Enter array: \n";
    arr=new int[size];
    for(int i=0;i < size; i++)
        cin >> arr[i];

    selection_sort(arr, size);
    cout << "Sort array:\n";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}
2.
#include <iostream>
using namespace std;

int bubble_sort(int arr[], int size)
{
    int buff = 0;

    for (int i = 0; i < size - 1; i++)
    {

        for (int j = size - 1; j > i; j--)
        {
            if (arr[j] < arr[j - 1])
            {
                buff = arr[j - 1];
                arr[j - 1] = arr[j];
                arr[j] = buff;
            }
        }

    }
}

int main() {
    int *arr;
    int size;
    cout<<"Enter size: \n";
    cin >> size;

    cout<<"Enter array: \n";
    arr=new int[size];
    for(int i=0;i < size; i++)
        cin >> arr[i];

    bubble_sort(arr, size);
    cout << "Sort array:\n";
    for (int i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    }
}
3.
#include <iostream>
using namespace std;

void insertion_sort(int arr[], const int n)
{
    int key = 0;
    int j = 0;
    for (int i = 1; i < n; i++)
    {
        key = arr[i];
        j = i - 1;
        while (j >= 0 && arr[j] > key)
        {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}
int main() {
    int *arr;
    int size;
    cout<<"Enter size: \n";
    cin >> size;
    cout<<"Enter array: \n";
    arr=new int[size];
    for(int i = 0;i < size; i++)
        cin >> arr[i];

    insertion_sort(arr, size);
    cout << "Sort array:\n";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}
4.
#include "stdafx.h"
#include <iostream>
using namespace std;

void Merge(int *A, int first, int last)
{
int middle, start, final, j;
int *mas=new int[100];
middle=(first+last)/2; 
start=first; 
final=middle+1; 
for(j=first; j<=last; j++) 
if ((start<=middle) && ((final>last) || (A[start]<A[final])))
{
mas[j]=A[start];
start++;
}
else
{
mas[j]=A[final];
final++;
}

for (j=first; j<=last; j++) A[j]=mas[j];
delete[]mas;
};
void MergeSort(int *A, int first, int last)
{
{
if (first<last)
{
MergeSort(A, first, (first+last)/2);
MergeSort(A, (first+last)/2+1, last); 
Merge(A, first, last);
}
}
};

void main()
{
int i, n;
int *A=new int[100];
cout<<" array size > "; cin>>n;
for (i=1; i<=n; i++)
{ cout<<i<<" element > "; cin>>A[i];}
MergeSort(A, 1, n);
cout<<" ordered array: "; 
for (i=1; i<=n; i++) cout<<A[i]<<" ";
delete []A;
system("pause>>void");
}
